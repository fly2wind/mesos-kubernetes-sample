---
#- name: create kubernetes directory
#  file: path={{ item }} state=directory owner=root group=root mode=0755
#  with_items:
#    - /etc/kubernetes/manifests

#- name: install kubernetes packages
#  copy: src=kubectl dest=/usr/bin/kubectl owner=root group=root mode=0755

#- name: install kubernetes files
#  template: src=master.json.j2 dest=/etc/kubernetes/manifests/master.json owner=root group=root mode=0755

- name: docker run zookeeper
  docker:
    name:  mesos-zookeeper
    image: baselibrary/zookeeper:3.4
    state: started
    net: host
    volumes:
      - /var/lib/zookeeper:/var/lib/zookeeper
    env:
      ZOOKEEPER_ID: 1
      ZOOKEEPER_SERVER_1: "{{ ansible_eth1.ipv4.address }}"
    restart_policy: always

- name: docker run mesos master
  docker:
    name:  mesos-master
    image: baselibrary/mesos:0.25
    state: started
    net: host
    volumes:
      - /var/log/mesos:/var/log/mesos
      - /var/lib/mesos:/var/lib/mesos
    command: "mesos-master
              --registry=in_memory
              --ip={{ ansible_eth1.ipv4.address }}
              --port=5050
              --hostname={{ ansible_eth1.ipv4.address }}
              --zk=zk://127.0.0.1:2181/mesos
              --quorum=1
              --cluster=mesos
              --log_dir=/var/log/mesos
              --work_dir=/var/lib/mesos
              "
    restart_policy: always

- name: docker run kubernetes
  docker:
    name:  kube-master
    image: baselibrary/kubernetes:1.1
    state: started
    net: host
    volumes:
      - /var/lib//kubernetes:/var/lib/kubernetes
    env:
      HOST: "{{ ansible_eth1.ipv4.address }}"
      K8SM_MESOS_MASTER: "zk://{{ ansible_eth1.ipv4.address }}:2181/mesos"
    restart_policy: always
