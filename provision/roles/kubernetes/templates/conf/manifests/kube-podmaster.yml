apiVersion: v1
kind: Pod
metadata:
  name: kube-podmaster
  namespace: kube-system
spec:
  hostNetwork: true
  containers:
  - name: scheduler-elector
    image: gcr.io/google_containers/podmaster:1.1
    command:
    - /podmaster
    - --etcd-servers={% for host in groups[etcd_servers_group] %}{{ etcd_client_scheme }}://{{ hostvars[host].private_ipv4 }}:{{ etcd_client_port }}{% if not loop.last %},{% endif %}{% endfor %}
    
    - --key=scheduler
    - --whoami={{ private_ipv4 }}
    - --source-file=/src/manifests/kube-scheduler.yml
    - --dest-file=/dst/manifests/kube-scheduler.yml
    volumeMounts:
    - mountPath: /src/manifests
      name: manifest-src
      readOnly: true
    - mountPath: /dst/manifests
      name: manifest-dst
  - name: controller-manager-elector
    image: gcr.io/google_containers/podmaster:1.1
    command:
    - /podmaster
    - --etcd-servers={% for host in groups[etcd_servers_group] %}{{ etcd_client_scheme }}://{{ hostvars[host].private_ipv4 }}:{{ etcd_client_port }}{% if not loop.last %},{% endif %}{% endfor %}
    
    - --key=controller
    - --whoami={{ private_ipv4 }}
    - --source-file=/src/manifests/kube-controller-manager.yml
    - --dest-file=/dst/manifests/kube-controller-manager.yml
    terminationMessagePath: /dev/termination-log
    volumeMounts:
    - mountPath: /src/manifests
      name: manifest-src
      readOnly: true
    - mountPath: /dst/manifests
      name: manifest-dst
  volumes:
  - hostPath:
      path: /srv/kubernetes/manifests
    name: manifest-src
  - hostPath:
      path: /etc/kubernetes/manifests
    name: manifest-dst
